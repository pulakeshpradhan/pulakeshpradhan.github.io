var table_region = ui.import && ui.import("table_region", "table", {
      "id": "users/fahrulmuhamad20/LCDI_BC/Table_Region"
    }) || ee.FeatureCollection("users/fahrulmuhamad20/LCDI_BC/Table_Region"),
    table_area = ui.import && ui.import("table_area", "table", {
      "id": "users/fahrulmuhamad20/LCDI_BC_BLEND_REV_V2/Table_Area"
    }) || ee.FeatureCollection("users/fahrulmuhamad20/LCDI_BC_BLEND_REV_V2/Table_Area");
function mozaik(year){
  var img = ee.ImageCollection(aoi.map(function(x){return annualdata(x,year)}))
  return img.max().set('IMG_year',year)}
function annualdata(region,year){
  var img = ee.Image("users/fahrulmuhamad20/LCDI_BC_BLEND_REV_V2/Coastal_Landcover_"+region+"_"+year)
  img = img.updateMask(img.eq(1))
  return img}
function addLayerSelector(panel) {
  var label = ui.Label('Select year to display');
  var select = ui.Select({items: Object.keys(images), onChange: updateMap});
  select.setValue(Object.keys(images)[0], true);
  var controlPanel =
      ui.Panel({widgets: [label, select], style: {position: 'top-left'}});
  panel.add(controlPanel)}
function updateMap(selection){
  var filterRegion = table_area.filter(ee.Filter.eq('REGION','INDONESIA')).first()
  var area = filterRegion.get(selection).getInfo()
  area = area.toLocaleString()
  var information = ui.Label({
    value:'The area of mangrove forest in Indonesia was about '+area+' ha in '+selection+'.',
    style:{fontSize:'14px'}})
  mainMap.layers().set(1, ui.Map.Layer(images[selection]))
  DescriptionPanel.widgets().set(4,information)}
function generateChart(region){
  var filterRegion = table_area.filter(ee.Filter.eq('REGION',region)).first()
  var listArea = [
    ['Year','Area'],
    ['2009',filterRegion.get('2009').getInfo()],
    ['2010',filterRegion.get('2010').getInfo()],
    ['2011',filterRegion.get('2011').getInfo()],
    ['2012',filterRegion.get('2012').getInfo()],
    ['2013',filterRegion.get('2013').getInfo()],
    ['2014',filterRegion.get('2014').getInfo()],
    ['2015',filterRegion.get('2015').getInfo()],
    ['2016',filterRegion.get('2016').getInfo()],
    ['2017',filterRegion.get('2017').getInfo()],
    ['2018',filterRegion.get('2018').getInfo()],
    ['2019',filterRegion.get('2019').getInfo()],
    ['2020',filterRegion.get('2020').getInfo()],
    ['2021',filterRegion.get('2021').getInfo()]]
  var chart = ui.Chart(listArea).setChartType('ColumnChart').setOptions({
    title:'Mangrove Extent Area of '+region.getInfo(),
    titleTextStyle:{color:'grey'},
    hAxis: {title: 'Year',textStyle:{fontSize:10}, titleTextStyle: {italic: false, bold: true}},
    vAxis: {title: 'Hectare',format: 'short', titleTextStyle: {italic: false, bold: true}},
    legend: {position: "none"},
    bar: { groupWidth: '40%' },
    colors: ['LightSeaGreen']})
  return chart}
function addLegendandDescription(panel) {
  var title1 = ui.Label({
    value: 'Indonesian Mangrove Forest',
    style: {fontSize: '27px', fontWeight: 'bold', color: 'LightSeaGreen'}})
  var title2 = ui.Label({
    value: '2009 to 2021\n\n',
    style: {fontSize: '20px',fontWeight: 'bold', color: 'orange',whiteSpace:'pre'}})
  var des1 = ui.Label({
    value: 'The dataset was generated by WRI Indonesia and Low Carbon Development Indonesia (LCDI). The map depicts the extent of mangrove forests in Indonesia from selected year, derived by optical Landsat-5, Landsat-7 and Landsat 8 satellite data.',
    style: {fontSize: '14px', textAlign: 'justify',}})
  var des2 = ui.Label({
    value: 'Satellite Image was processed to generate Coastal Landuse Classification based on three spectral indices i.e. Mangrove vegetation Index (MVI), Normallized Diffence Wetness Index (NDWI), and Normallized Difference Built-up Index (NDBI). Afterward, Landuse time series data was harmonized to obtain credible time series land use change by applying logical expression. These method prevent illogical land use change e.g. new emerge mangrove extent after land clearing  when in fact it was new planting plantation. Harmonized landuse data were masked by specific value to obtain mangrove extent.',
    style: {fontSize: '14px',textAlign: 'justify'}})
  var source = ui.Label({
    value: 'Sources : \n1.Data\n2.Data\n3.Data',
    style: {fontSize: '12px',whiteSpace:'pre'}})
  var right = ui.Label({
    value: '\n \n \n \n \n \n \n \nÂ© WRI Indonesia - LCDI - Bappenas (2022)',
    style: {fontSize: '10px',whiteSpace:'pre'}})
  var logo = ee.Image('users/fahrulmuhamad20/LCDI_BC/Logo').visualize({
    bands:  ['b1', 'b2', 'b3'],min: 0,max: 255})
  var thumb = ui.Thumbnail({
    image: logo,style: {height: '150px', width: '350px',padding :'0'}})
  panel.widgets().set(0,title1)
  panel.widgets().set(1,title2)
  panel.widgets().set(2,des1)
  panel.widgets().set(3,des2)
  panel.widgets().set(5,source)
  // panel.widgets().set(5,source)
  panel.widgets().set(6,right)
  panel.widgets().set(7,thumb)
}
function clickonmap(coords) {
  var location = 'lon: ' + coords.lon.toFixed(2) + ' ' +
                'lat: ' + coords.lat.toFixed(2);
  var point = table_region.filterBounds(ee.Geometry.MultiPoint(coords.lon, coords.lat))
  var first = point.first()
  var regionselected = first.get('REGION')
  mainMap.layers().set(2, ui.Map.Layer(point.draw({color: 'yellow',strokeWidth: 1}),{}, 'Selected',true,0.3))
  var chart = generateChart(regionselected)
  chartpanel.widgets().set(0,chart)}
var DescriptionPanel = ui.Panel({style: {width: '20%'}})
var instruction = ui.Label({
  value: 'Select a region to show time series chart',
  style:{
    fontSize: '14px',
    width:'100%',
    textAlign: 'center',
    color: 'black',
    textDecoration:'underline'
    // backgroundColor: 'rgba(220, 220, 220, 0.1)'
  }})
var chartpanel = ui.Panel({
  widgets: instruction,
  style : {
    position:'bottom-center',
    width:'40%',
    // backgroundColor: 'rgba(220, 220, 220, 0.1)'
  }})
var mainMap = ui.Map()
mainMap.layers().set(0,ui.Map.Layer(table_region.draw({color: 'black',strokeWidth: 1}),{}, 'Region',true,0.1))
mainMap.setControlVisibility(false)
var GRAYMAP = [
  {stylers: [ { saturation: -100 }]},
  {elementType: 'labels',stylers: [ { lightness: 20 }]},
  {featureType: 'road',elementType: 'geometry',stylers: [ { visibility: 'simplified' }]},
  {featureType: 'road',elementType: 'labels',stylers: [ { visibility: 'off' } ]},
  {elementType: 'labels.icon',stylers: [ { visibility: 'off' } ]},
  {featureType: 'poi',elementType: 'all',stylers: [ { visibility: 'off' }]}]
var aoi = ['BALINUSRA','JAWA','KALIMANTAN','MALUKU','PAPUA','SULAWESI','SUMATERA']
var year = [2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021]
var INA = ee.FeatureCollection("USDOS/LSIB/2013").filter(ee.Filter.stringContains('name', 'INDONESIA'))
var collection = ee.ImageCollection(year.map(mozaik))
var VP = {"palette":['LightSeaGreen']}
var MVI = collection.toList(collection.size())
var y2009 = ee.Image(MVI.get(0))
var y2010 = ee.Image(MVI.get(1))
var y2011 = ee.Image(MVI.get(2))
var y2012 = ee.Image(MVI.get(3))
var y2013 = ee.Image(MVI.get(4))
var y2014 = ee.Image(MVI.get(5))
var y2015 = ee.Image(MVI.get(6))
var y2016 = ee.Image(MVI.get(7))
var y2017 = ee.Image(MVI.get(8))
var y2018 = ee.Image(MVI.get(9))
var y2019 = ee.Image(MVI.get(10))
var y2020 = ee.Image(MVI.get(11))
var images = {
  '2009': y2009.visualize(VP).clip(INA),
  '2010': y2010.visualize(VP).clip(INA),
  '2011': y2011.visualize(VP).clip(INA),  
  '2012': y2012.visualize(VP).clip(INA),
  '2013': y2013.visualize(VP).clip(INA),
  '2014': y2014.visualize(VP).clip(INA),
  '2015': y2015.visualize(VP).clip(INA),  
  '2016': y2016.visualize(VP).clip(INA),
  '2017': y2017.visualize(VP).clip(INA),
  '2018': y2018.visualize(VP).clip(INA),
  '2019': y2019.visualize(VP).clip(INA),
  '2020': y2019.visualize(VP).clip(INA),
  '2021': y2019.visualize(VP).clip(INA)};
mainMap.add(chartpanel)
mainMap.onClick(clickonmap)
mainMap.setOptions('Gray', {'Gray': GRAYMAP})
addLegendandDescription(DescriptionPanel);
addLayerSelector(mainMap)
ui.root.clear();
ui.root.add(DescriptionPanel)
ui.root.add(mainMap)
mainMap.setCenter(115.4419039138731,-1.1103371458841975, 5);
mainMap.style().set('cursor', 'crosshair');