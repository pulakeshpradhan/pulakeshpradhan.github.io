//Autor: Evelyn Schibber
//Trabajo final para Especialización TelySIG 
//Contacto: eschibber@agro.uba.ar
//Fecha última modificación: 2022-04-30
//Graficar PPNA con EUR variable según estación del año, uso del suelo y región agroecológica
//Desarrollado para Uruguay 
//potreros: cargar el shape de potreros que se quiere estudiar. Tener en cuenta que si son muchos produce un error al graficar
// usos_potreros: CSV con el historial de usos del suelo extraído de FOCUS.
//Instructivo para cargar los usos del suelo en https://docs.google.com/document/d/1YUtqkyKoOBkXaff2diQwY9gGMbIKrJRxFYb85rlYZvQ/edit?usp=sharing
//Fecha fin debe coincidir con la última fecha en la cuál se tienen datos de usos del suelo en "usos_potrero"
//VARIACIONES EXTRAS:
//FILTRO MANUAL DE IMAGENES DE MALA CALIDAD
//CAMBIO ECUACION PPNA (VALOR MINIMO DE PPNA)
var potreros = ee.FeatureCollection('users/mabrigo/gyc-extension/alejandro-rodriguez-casas');
var usos_potrero = ee.FeatureCollection('users/mabrigo/gyc-extension/tabla-usos-alejandro-rodriguez');
//Carga en el mapa la FeatureCollection de los potreros
//Map.addLayer(potreros);
//Imprime en la pantalla la FeactureCollection de los potreros
//print('potreros',potreros);
//rasterizar potreros para obtener ID 
var potreros_raster = ee.Image(potreros.reduceToImage({
                                properties:['IDLOTE'],
                                reducer: ee.Reducer.first()
                              })).rename('IDLOTE');
//Carga en el mapa el raster de los potreros 
//Map.addLayer(potreros_raster,{}, 'potreros raster', false);
//Imprime en la consola el raster de los potreros
//print('potreros raster', potreros_raster)	
//Carga el shape de zonas agroecologicas
var zonas_agroecologicas = ee.FeatureCollection('projects/ee-eschibber/assets/zonas_agroecologicas');
var tajamares = ee.FeatureCollection('projects/ee-eschibber/assets/Tajamares_Uruguay').filterBounds(potreros);
// ENMASCARAR
{
var enmascarar = /* color: #d63000 */ee.Geometry.MultiPolygon(
        [[[[-55.016419794476086, -34.19136184279434],
           [-55.01632323495155, -34.19135740553373],
           [-55.0158994459272, -34.19121541307116],
           [-55.015679504787975, -34.191153291293624],
           [-55.01533618203407, -34.19125091120922],
           [-55.01512696973091, -34.19133521922721],
           [-55.01512696973091, -34.19145058795737],
           [-55.015405919468456, -34.19150383501037],
           [-55.01554539433723, -34.19149496050388],
           [-55.015679504787975, -34.19150383501037],
           [-55.0156473182798, -34.19160145452021],
           [-55.01585340318999, -34.191708748967784],
           [-55.01597678480468, -34.19193061078765],
           [-55.016062615493155, -34.19212141148592],
           [-55.01621818361602, -34.192139160366146],
           [-55.01637375173888, -34.19230777454192],
           [-55.016094802001334, -34.19239651870955],
           [-55.015831945517874, -34.1923743326764],
           [-55.01575147924743, -34.19219684420106],
           [-55.015569089034415, -34.192006043673445],
           [-55.015295503714896, -34.1919350480181],
           [-55.015284774878836, -34.19209478815859],
           [-55.01548862276397, -34.1922190302809],
           [-55.01545107183776, -34.19240539312118],
           [-55.01545107183776, -34.19264943907495],
           [-55.015933973430556, -34.192860070197156],
           [-55.01608417713539, -34.19331266151162],
           [-55.01656775977728, -34.193662656635624],
           [-55.01656775977728, -34.19390226182427],
           [-55.016471200252745, -34.19413299210323],
           [-55.015977673794005, -34.1940087528007],
           [-55.0147104792352, -34.19241312366988],
           [-55.01449053809598, -34.19215576537715],
           [-55.014324241137054, -34.19205370928498],
           [-55.01398628280118, -34.19226669577205],
           [-55.013568109561284, -34.1919236762545],
           [-55.013509100962956, -34.19178612198362],
           [-55.01334816842206, -34.19169737717367],
           [-55.01296193032392, -34.191883741166706],
           [-55.01271516709455, -34.191897052864746],
           [-55.012538141299565, -34.19188817839962],
           [-55.01239330201276, -34.19179943369706],
           [-55.01215726761945, -34.19178168474534],
           [-55.01198024182447, -34.19183936882477],
           [-55.012286013652165, -34.19206566752459],
           [-55.01279596038159, -34.19298602279361],
           [-55.01295689292248, -34.193252252875126],
           [-55.01318219847973, -34.19327887583705],
           [-55.013386046364865, -34.19342086482537],
           [-55.013643538430294, -34.19361609929393],
           [-55.01379374213513, -34.193811333310514],
           [-55.01423362441357, -34.19397106989696],
           [-55.01479152388867, -34.194059812314244],
           [-55.015145575478634, -34.1941751773171],
           [-55.01523140616711, -34.19436153583445],
           [-55.01495245642956, -34.19443252944702],
           [-55.014394556954464, -34.194263919519585],
           [-55.01420860833612, -34.19435606008802],
           [-55.01386528558221, -34.19440043110576],
           [-55.013532691664366, -34.194214072674356],
           [-55.01296406335321, -34.194054336548206],
           [-55.01132163249004, -34.191100491614485],
           [-55.01069399558055, -34.191344541344414],
           [-55.008062610416744, -34.18927408359396],
           [-55.01094909112316, -34.18681693290333]]],
         [[[-55.0166187385568, -34.19500551265652],
           [-55.016484628106056, -34.194921208307775],
           [-55.016237864876686, -34.194672731842275],
           [-55.016280780220924, -34.19448637401265],
           [-55.01658655204862, -34.19443312884282],
           [-55.01702335747411, -34.19467207899636],
           [-55.017114552580615, -34.195035919289076],
           [-55.017146739088794, -34.195093601142524],
           [-55.01673904331853, -34.195248898244174]]],
         [[[-55.035479496550494, -34.16650430601939],
           [-55.03187460763448, -34.170019578624114],
           [-55.02440733773702, -34.16622023719374],
           [-55.024235676360064, -34.165225988776065],
           [-55.02964300973409, -34.160680704031144]]],
         [[[-55.03977168256083, -34.17935826188259],
           [-55.03942835980693, -34.17892334735061],
           [-55.03912795239726, -34.178816837327574],
           [-55.03904212170878, -34.17805351156126],
           [-55.0391708677415, -34.17753870656398],
           [-55.03960087932054, -34.17736741064796],
           [-55.040459186205304, -34.17708337838353],
           [-55.04088833964769, -34.17679934516303],
           [-55.04183247722093, -34.17649755881869],
           [-55.042339414724744, -34.17624680904986],
           [-55.04279270804826, -34.177655879937895],
           [-55.04226163066331, -34.17880530931475]]],
         [[[-55.03341151909976, -34.18306462568662],
           [-55.0336716933742, -34.18314894188737],
           [-55.03399355845599, -34.18286492908562],
           [-55.03427250819354, -34.18277617488899],
           [-55.03431542353778, -34.182913743853966],
           [-55.034358338882015, -34.18304687489681],
           [-55.034379796554134, -34.183202194181256],
           [-55.03449781375079, -34.18330869866817],
           [-55.03464801745562, -34.18341964069906],
           [-55.03453000025897, -34.183539457928546],
           [-55.034363703300045, -34.18366371265345],
           [-55.03418667750506, -34.18360602298251],
           [-55.03401501612811, -34.183632648989395],
           [-55.034175948669, -34.1838323437731],
           [-55.03419204192309, -34.1839255345104],
           [-55.03400428729205, -34.18410747803411]]],
         [[[-55.0378145079146, -34.18789027946107],
           [-55.03743899865251, -34.18677203637919],
           [-55.03752482934099, -34.186789786385155],
           [-55.037846694422775, -34.18710041088518],
           [-55.03792179627519, -34.187260160182625],
           [-55.0387693743239, -34.187748281161305],
           [-55.038833747340256, -34.18786365479807],
           [-55.03905905289751, -34.18793465388072],
           [-55.03955257935625, -34.187872529686665],
           [-55.03976715607744, -34.1880677769996],
           [-55.03994954629045, -34.18839614646118],
           [-55.03993881745439, -34.18856476812033],
           [-55.03997100396257, -34.18874226423946],
           [-55.040325055552536, -34.18894638431469],
           [-55.040325055552536, -34.18909725535714],
           [-55.040228496028, -34.18921262714868],
           [-55.040099749995285, -34.18925700087263],
           [-55.040099749995285, -34.189398996632406],
           [-55.03989590211015, -34.189487743860866]]],
         [[[-55.03909476112988, -34.18629479898832],
           [-55.03916449856427, -34.186383549483004],
           [-55.03938980412152, -34.18679180055579],
           [-55.039348230226395, -34.18686779274578],
           [-55.03909207921655, -34.18701478469182],
           [-55.039035752531554, -34.18707358139368],
           [-55.03844786437088, -34.18692674353663],
           [-55.038061626272736, -34.1869045560646],
           [-55.038077719526825, -34.186811368618336],
           [-55.03821183006448, -34.186764774890214],
           [-55.03826547415787, -34.18667380600949],
           [-55.0385417416864, -34.18654511820456],
           [-55.03874314996602, -34.18640442758344]]],
         [[[-55.041931974948085, -34.187451056926385],
           [-55.0418085933334, -34.18746880678947],
           [-55.04156183010403, -34.18750874396777],
           [-55.041411626399196, -34.18756643096969],
           [-55.04129897362057, -34.1876507426708],
           [-55.04123996502224, -34.187779428788915],
           [-55.04112194782559, -34.18792142703624],
           [-55.04085909134213, -34.187952489120974],
           [-55.04074107414547, -34.18806786247842],
           [-55.0406015992767, -34.188041237871474],
           [-55.04025291210476, -34.1879968635079],
           [-55.03989249230842, -34.18737305845816],
           [-55.039710102095405, -34.1871644970942],
           [-55.039468703284065, -34.18669856026922],
           [-55.03954916955451, -34.18663643516476],
           [-55.039243397726814, -34.186254808519244],
           [-55.03957599164466, -34.18615718282097]]],
         [[[-55.04250491441545, -34.188822593058],
           [-55.042419083726976, -34.18899121386461],
           [-55.042177684915636, -34.18903558770504],
           [-55.04199529470262, -34.18907108676059],
           [-55.041668065202806, -34.18896458954913],
           [-55.04134083570299, -34.1888048434798],
           [-55.041190631998155, -34.18873384512965],
           [-55.04099214853105, -34.1888092808747],
           [-55.04090095342455, -34.18873384512965],
           [-55.040622003687, -34.18845872595832],
           [-55.04059518159685, -34.1882723543969],
           [-55.04086340249834, -34.18820135559852],
           [-55.04117482656653, -34.18803595511818],
           [-55.04119628423865, -34.18789173834217],
           [-55.04123919958289, -34.187825176670074],
           [-55.041378674451664, -34.187905050670274],
           [-55.041609344426945, -34.18828666984951],
           [-55.041882929746464, -34.18842866724289],
           [-55.042338905278996, -34.188637225481]]],
         [[[-55.04135453457053, -34.18927842789791],
           [-55.041268703882054, -34.189338332373],
           [-55.04117750877555, -34.189338332373],
           [-55.04107290262397, -34.18927177184249],
           [-55.040984389726475, -34.1892140860069],
           [-55.04090928787406, -34.18912755717954],
           [-55.040984389726475, -34.189054340410124],
           [-55.04107290262397, -34.1890254974229],
           [-55.041306728484045, -34.18912929751789],
           [-55.0413711015004, -34.18917810866118],
           [-55.04139232233957, -34.18923714302483]]],
         [[[-55.04118334686936, -34.18904942467703],
           [-55.04113774931611, -34.18890742832873],
           [-55.041159206988226, -34.18886527311681],
           [-55.041263813101516, -34.18886194510159],
           [-55.04134696161927, -34.18893405266225],
           [-55.04138853587978, -34.189022800354515],
           [-55.041295999647986, -34.18907161158486]]],
         [[[-55.04258526109862, -34.1891695973484],
           [-55.042641587487935, -34.1892295019008],
           [-55.04260671877074, -34.18932490535935],
           [-55.04259598993468, -34.18940034057576],
           [-55.04260671877074, -34.18947133836487],
           [-55.042547710172414, -34.18960224038185],
           [-55.04245383285689, -34.1896377391989],
           [-55.04233849786925, -34.1896843313736],
           [-55.04219365858245, -34.18969764341878],
           [-55.04196298860717, -34.18965770727692],
           [-55.04183692478347, -34.18960445905835],
           [-55.041791327230214, -34.18955342948402],
           [-55.041780598394155, -34.18949574384107],
           [-55.04182619594741, -34.189420308709984],
           [-55.041869111291646, -34.18934709219471],
           [-55.04181814932036, -34.189311593255326],
           [-55.041780598394155, -34.189200658973476],
           [-55.04189861559081, -34.18917181603628],
           [-55.04195762418914, -34.18918734684984],
           [-55.04204613708663, -34.18920287766053],
           [-55.04217756532836, -34.1890786310949],
           [-55.04225534938979, -34.18907419371417],
           [-55.04248870157409, -34.18914741046635]]],
         [[[-55.04147081305943, -34.17600977847543],
           [-55.04017586938806, -34.17661714034166],
           [-55.03993983478302, -34.17675915750549],
           [-55.03914053593841, -34.177198521540724],
           [-55.03896350988355, -34.177131951510944],
           [-55.03860945830503, -34.17706538159864],
           [-55.03839488170639, -34.17709644760344],
           [-55.03825540628977, -34.17738491779076],
           [-55.03753470660284, -34.17753514105512],
           [-55.03732214130036, -34.17743195819038],
           [-55.036975465711286, -34.17756176944574],
           [-55.03661470836213, -34.17758395880374],
           [-55.03652644684949, -34.17749228672372],
           [-55.036631178826205, -34.17737100475502],
           [-55.03667153758562, -34.17725859873632],
           [-55.03651622100338, -34.17733113244481],
           [-55.036436006131055, -34.17736594313368],
           [-55.03613124037397, -34.177400892309265],
           [-55.03612252334219, -34.1774974185179],
           [-55.03600852865314, -34.177757040187196],
           [-55.035898557842906, -34.1778968366074],
           [-55.03562731979086, -34.17782915778033],
           [-55.03544727706538, -34.17787908473368],
           [-55.035213589683295, -34.178155347469584],
           [-55.03516380105563, -34.17829569764568],
           [-55.03533395361721, -34.1782696246545],
           [-55.03548482679496, -34.178268515378974],
           [-55.035549869891334, -34.17867791588608],
           [-55.03528718073636, -34.17881711781312],
           [-55.03498962369805, -34.178439300946394],
           [-55.03438378115451, -34.17856237558443],
           [-55.03432477250324, -34.1786511342936],
           [-55.03415311097228, -34.17857568939675],
           [-55.03394926290428, -34.17848249266632],
           [-55.03376687252762, -34.17859344114323],
           [-55.03393853405854, -34.17921918782131],
           [-55.034443624294, -34.18094955698949],
           [-55.03412175892341, -34.18134895914483],
           [-55.03363374756838, -34.18125573138152],
           [-55.03363374756841, -34.180891831314426],
           [-55.033451357191744, -34.18106934373834],
           [-55.033118762975455, -34.18127348256413],
           [-55.03273252453077, -34.18130898491816],
           [-55.032335557240415, -34.18122910460048],
           [-55.03029707656081, -34.17759890812805],
           [-55.0363284525781, -34.16836734233864],
           [-55.04167434384934, -34.1743266494073],
           [-55.042144001190685, -34.175760363769946]]],
         [[[-55.039024786443655, -34.18032580011176],
           [-55.03908915946001, -34.180401243376025],
           [-55.03906770178789, -34.180463373072406],
           [-55.038761929960195, -34.180441183900385],
           [-55.03866537043566, -34.180503313567364],
           [-55.0384025139522, -34.18051662706147],
           [-55.03822012373919, -34.18049443790344],
           [-55.038037733526174, -34.180547691872896],
           [-55.03786070773119, -34.180598726895404],
           [-55.037533478231374, -34.180596507982024],
           [-55.0373940033626, -34.18069414011557],
           [-55.037343041382286, -34.18076958302104],
           [-55.03732963034624, -34.180862777171015],
           [-55.03718747326845, -34.180869433889974],
           [-55.03712041804308, -34.180840588104026],
           [-55.03717406211333, -34.180716329114595],
           [-55.037042633837885, -34.18068526441229],
           [-55.036991672010366, -34.18055212970217],
           [-55.03710432478899, -34.18043674606528],
           [-55.037265257329885, -34.18044562173525],
           [-55.03744228312487, -34.18042787039437],
           [-55.03743691870684, -34.18017935122974],
           [-55.037501291723196, -34.18007284279223],
           [-55.03760321566576, -34.18010834561968],
           [-55.03788752982134, -34.18015272413296],
           [-55.03837032744402, -34.18015272413296],
           [-55.038536624402944, -34.18024591893489],
           [-55.03862781950945, -34.18029029737583],
           [-55.03868146368975, -34.18018378907838],
           [-55.03893359133715, -34.18008615635427]]],
         [[[-55.037737326116506, -34.18112238882119],
           [-55.03771318623537, -34.18121558255203],
           [-55.03760053345675, -34.181304338390454],
           [-55.03746239959238, -34.18131987075984],
           [-55.037254528493825, -34.18120670696305],
           [-55.03722234198565, -34.18110907542266],
           [-55.03720624873156, -34.18102253828104],
           [-55.037265257329885, -34.180911593097846],
           [-55.0375924868297, -34.18082949356835]]],
         [[[-55.0364774370641, -34.17802369894324],
           [-55.036386241957594, -34.17814796179178],
           [-55.03643988613789, -34.17823228290621],
           [-55.036622276350904, -34.17823228290621],
           [-55.036616911932875, -34.17830772804242],
           [-55.036638369604994, -34.17840092488226],
           [-55.03650962357228, -34.178502997493496],
           [-55.03631114010518, -34.17846749399055],
           [-55.036075105711866, -34.17842755253187],
           [-55.03595708851521, -34.178418676649606],
           [-55.035849800154615, -34.17841423870812],
           [-55.03571568970387, -34.17828553830348],
           [-55.03579079155629, -34.17823672085727],
           [-55.035833706900526, -34.17818346542917],
           [-55.035833706900526, -34.17809026834915],
           [-55.035919537589, -34.17804145078996],
           [-55.036080470129896, -34.17793050168675],
           [-55.03627358917897, -34.17785949418413],
           [-55.03643452171986, -34.17789055997388],
           [-55.03650425915425, -34.177974881345534]]],
         [[[-55.03762445363183, -34.179012960439515],
           [-55.03764591130395, -34.17916828715045],
           [-55.03780684384484, -34.17919935245833],
           [-55.03802142056603, -34.17925704514262],
           [-55.03808042916436, -34.17941237140422],
           [-55.037940954295586, -34.179470063942844],
           [-55.03766736897607, -34.17949225337027],
           [-55.03738109244541, -34.1793893702363],
           [-55.0368392862244, -34.17926067131906],
           [-55.03675345553592, -34.17913641010923],
           [-55.036366551940596, -34.179002722338794],
           [-55.03625926358, -34.178909526163665],
           [-55.03621634823576, -34.178807454044225],
           [-55.03628072125212, -34.17873644727961],
           [-55.036398738448774, -34.178709819727466],
           [-55.03647384030119, -34.17874532312845],
           [-55.03651675564543, -34.17879414028042],
           [-55.03676888329283, -34.178767512746475],
           [-55.03699418885008, -34.17885627116023],
           [-55.037144392554914, -34.178909526163665],
           [-55.0372677741696, -34.17891396407911],
           [-55.03745016438261, -34.178865146996465]]],
         [[[-55.056076745073526, -34.18202960770454],
           [-55.05589435486051, -34.18202073220121],
           [-55.055840710680215, -34.18190978833065],
           [-55.055829981844155, -34.181856535220966],
           [-55.056066016237466, -34.18180328207767]]],
         [[[-55.05520455972386, -34.18331492017781],
           [-55.055360127846726, -34.18333488975267],
           [-55.05542450086308, -34.18342808103949],
           [-55.05546071064907, -34.18357341473333],
           [-55.05551569596959, -34.183700997787255],
           [-55.05544595855904, -34.18375646857779],
           [-55.055370856682785, -34.183763125053616],
           [-55.055303130650024, -34.18358506373796],
           [-55.0551978538377, -34.18362001036116],
           [-55.055046309007494, -34.183583399436394],
           [-55.055081177883416, -34.18344805032562]]],
         [[[-55.052519716319885, -34.183288803229],
           [-55.052664916382234, -34.18339075744047],
           [-55.05269246067003, -34.183803236954155],
           [-55.05306941575865, -34.18374509907193],
           [-55.053024026391306, -34.18342912705777],
           [-55.05305126386091, -34.18313444440543],
           [-55.053416874916955, -34.18308647546719],
           [-55.05341853715527, -34.18325679924111],
           [-55.05335748966348, -34.18346431617674],
           [-55.053393003733305, -34.18354757766139],
           [-55.053846939176324, -34.18342670420793],
           [-55.05387107905746, -34.18333573176098],
           [-55.05393813428283, -34.18331798102818],
           [-55.0541312533319, -34.1833091056604],
           [-55.05436728772521, -34.183142692341306],
           [-55.05451749143005, -34.18312494156789],
           [-55.05452822026611, -34.18327138533683],
           [-55.05442629632354, -34.18332907523662],
           [-55.0543833809793, -34.18338898393696],
           [-55.054216366014664, -34.18345059527859],
           [-55.05413053532619, -34.1835437864376],
           [-55.054178815088456, -34.18369910480717],
           [-55.05408761998195, -34.183801171008604],
           [-55.05407152672786, -34.183907674739324],
           [-55.05398569603938, -34.18409405594452],
           [-55.05369365709811, -34.184384704770046],
           [-55.05345225828677, -34.184548896829654],
           [-55.05318940180331, -34.184526708732164],
           [-55.053044562516504, -34.18451339587087],
           [-55.05292118090182, -34.184553334448445],
           [-55.052776341615015, -34.18463764916123],
           [-55.05295873182803, -34.18470865095928],
           [-55.05292654531985, -34.18477965269756],
           [-55.05269051092654, -34.18484621677291],
           [-55.05258858698397, -34.18492609359401],
           [-55.05247593420535, -34.18502815831091],
           [-55.052315001664454, -34.185072534236255],
           [-55.051425014679346, -34.18391906487613],
           [-55.05213311785928, -34.18333773045508],
           [-55.052449618523035, -34.183067031380574]]],
         [[[-55.054946540726625, -34.18246694830014],
           [-55.05488216770688, -34.182586766889045],
           [-55.05459785353634, -34.18262226866046],
           [-55.05382537729942, -34.18295509704106],
           [-55.05351960545621, -34.18305716414897],
           [-55.05322456244847, -34.18306160184556],
           [-55.05324602012171, -34.18291959540969],
           [-55.053551791965496, -34.182697709875164],
           [-55.054018496353564, -34.182540170784456],
           [-55.054022854945295, -34.1824458690337],
           [-55.05396820498697, -34.182378193653015],
           [-55.05401950224869, -34.18231384656778],
           [-55.05410835035187, -34.182276125859524],
           [-55.05424648413692, -34.182422571001815],
           [-55.05437657131697, -34.18239816352626],
           [-55.054471789706, -34.18230718991692],
           [-55.05467831981102, -34.182267250273846],
           [-55.05482852352376, -34.18227168801289]]],
         [[[-55.05498483676076, -34.1839383380005],
           [-55.055124311629534, -34.183942775651424],
           [-55.05519941348195, -34.18400490273973],
           [-55.05519404906392, -34.18409809328639],
           [-55.05514576930165, -34.184173533177336],
           [-55.05521550673604, -34.184193502548936],
           [-55.05538448590398, -34.184222347188474],
           [-55.05538448590398, -34.184266723537725],
           [-55.055326818430984, -34.18430444343871],
           [-55.0552262355721, -34.18431109986362],
           [-55.05510553616643, -34.18436213260956],
           [-55.05505189198613, -34.18430222460031],
           [-55.05492851037145, -34.1842556294526],
           [-55.05477294224858, -34.18430222460031],
           [-55.054708569232226, -34.18429334933606],
           [-55.05463346737981, -34.1842556294526],
           [-55.054487287003305, -34.18431775639045],
           [-55.054351835433245, -34.18427337998809],
           [-55.05416944522023, -34.184322193941455],
           [-55.05397632608301, -34.18427448945483],
           [-55.05392536419988, -34.18419572136772],
           [-55.05399778384328, -34.18413137559954],
           [-55.054062156859636, -34.18405149802593],
           [-55.05411311883092, -34.184020434504646],
           [-55.054357199851275, -34.18400268391593],
           [-55.05483195084691, -34.18399158979608]]],
         [[[-55.05391463536382, -34.18557359655607],
           [-55.052656676909955, -34.185558067299965],
           [-55.05231067437291, -34.185085462992774],
           [-55.052476301144665, -34.185039977830144],
           [-55.05259364790486, -34.184936803785185],
           [-55.05269490116393, -34.18484694230985],
           [-55.052881984893084, -34.18480145671069],
           [-55.052949040118456, -34.184850270358474],
           [-55.05314752358556, -34.18486358316661],
           [-55.05329236287236, -34.184805894316206],
           [-55.05339965123296, -34.184823644735914],
           [-55.05353912610173, -34.18491683437811],
           [-55.05368396538854, -34.18485914556413],
           [-55.05376443165898, -34.184970085555996],
           [-55.05388781327367, -34.18505439985225],
           [-55.05410238999486, -34.185085462992774],
           [-55.05401655930638, -34.18516090200073],
           [-55.05387172001958, -34.185209715440514],
           [-55.05383416909337, -34.18530290465621],
           [-55.053946821871996, -34.185409406490955]]],
         [[[-55.05570490566036, -34.18355653600765],
           [-55.05583365169308, -34.183627538715626],
           [-55.05584438052914, -34.18365416471572],
           [-55.05573709216854, -34.183720729679166],
           [-55.05569149461529, -34.183767325122325],
           [-55.055624439389916, -34.18374069915797],
           [-55.05561371055386, -34.18368300953967],
           [-55.05560834613583, -34.18361866338041]]],
         [[[-55.05499157435874, -34.182804426169795],
           [-55.05509886271933, -34.18287321065728],
           [-55.05504790074805, -34.183039624507956],
           [-55.05498352773169, -34.183050718753],
           [-55.05487087495307, -34.18298193441024],
           [-55.05486819274405, -34.182890961483665],
           [-55.05488965041617, -34.182831052429655]]],
         [[[-55.0550023031948, -34.182715671909506],
           [-55.054929883551395, -34.18275783019478],
           [-55.05485746390799, -34.18272454733973],
           [-55.054793090891636, -34.18265576273102],
           [-55.05487355716208, -34.18260251009222],
           [-55.05498620994071, -34.182624698695804]]],
         [[[-55.05665425076997, -34.19024986819751],
           [-55.051676070838326, -34.19269923271222],
           [-55.04534605756318, -34.18927808973995],
           [-55.05140784993684, -34.183944202211606],
           [-55.05265775933778, -34.18558167943581],
           [-55.054489708291634, -34.18560831899486],
           [-55.05633775010621, -34.18563936775567]]],
         [[[-55.05567993385624, -34.195024403045274],
           [-55.05144357781236, -34.19948792973523],
           [-55.04889385245009, -34.203754817383654],
           [-55.045095844485004, -34.20434044764946],
           [-55.04297153494521, -34.200116720047156],
           [-55.04600914860723, -34.19464403655333],
           [-55.04414233113287, -34.19272719284294],
           [-55.04358443165777, -34.19224797510737],
           [-55.04510792637823, -34.19183975044399],
           [-55.04603060627935, -34.1896743517985]]]]);
}
//Carga en el mapa el raster de de areas agroecologicas 
//Map.addLayer(zonas_agroecologicas, {}, 'Areas Agroecologicas', false)
//.addLayer(tajamares, {}, 'Areas Agroecologicas', false)
//Carga la tabla de EUR. Esta tabla es fija. 
var EUR_tabla = ee.FeatureCollection('projects/ee-eschibber/assets/EUR_GEE_fija'); //tabla general, no modificar
//print('EUR tabla',EUR_tabla)
// FILTRO MANUAL DE IMAGENES CON NUBOSIDAD
var filtro1 = ee.Filter.date('2018-12-01', '2019-02-25');//filtra por fechas inicio y fin
var filtro2 = ee.Filter.date('2019-02-26', '2019-04-30');//filtro extra por nubosidad
var filtro3 = ee.Filter.date('2019-02-05', '2020-08-29');//filtro extra por nubosidad
var filtro3b = ee.Filter.date('2019-08-31', '2019-10-22');//filtro extra por nubosidad
var filtro4 = ee.Filter.date('2019-10-24', '2022-04-30');//filtro extra por nubosidad
var allfilter = ee.Filter.or(filtro1,filtro2,filtro3,filtro3b,filtro4); // Create joint Filter
// // Importa la Coleccion Sentinel SR (2A) y aplica filtros	
var S2 = ee.ImageCollection('COPERNICUS/S2_SR')	
    .filter(allfilter)
  //.filterDate('2018-12-01', '2022-03-28')	//filtra por fechas inicio y fin
    .filterBounds(potreros)	//seleciona por los potreros
.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 1));	//prefiltro por porcentaje de nubes
//print('S2',S2);//imprime en la consola
// FILTRO MANUAL DE IMAGENES CON NUBOSIDAD
var filtro5 = ee.Filter.date('2017-07-01', '2017-11-16');//filtra por fechas inicio y fin
var filtro6 = ee.Filter.date('2017-11-18', '2018-01-10');//filtro extra por nubosidad
var filtro7 = ee.Filter.date('2018-01-12', '2018-03-03');//filtro extra por nubosidad
var filtro8 = ee.Filter.date('2018-03-05', '2018-03-18');//filtro extra por nubosidad
var filtro9 = ee.Filter.date('2018-03-20', '2018-10-12');//filtro extra por nubosidad
var filtro10 = ee.Filter.date('2018-10-14', '2018-11-30');//filtro extra por nubosidad
var allfilter2 = ee.Filter.or(filtro5,filtro6,filtro7,filtro8,filtro9,filtro10); // Create joint Filter
// // Importa la Coleccion Sentinel nivel 1C aplica filtros y la función de enmascarar nubes	
var S2_TOA = ee.ImageCollection('COPERNICUS/S2')	
    .filter(allfilter2)
  //.filterDate('2017-07-01', '2018-11-30')	//filtra por fechas inicio y fin. Quedan fijas, no modificar
    .filterBounds(potreros)	//seleciona por los potreros
    .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 5));	//prefiltro por porcentaje de nubes
//print('S2_TOA',S2_TOA);//imprime en la consola
 /// Importar imágenes de PAR (radiación incidente)
var radiacion = ee.ImageCollection("ECMWF/ERA5_LAND/MONTHLY")
                .filter(ee.Filter.date('1981-01-01', '2022-04-28')).select(['surface_net_solar_radiation']);
radiacion = radiacion.map(function(x){
  var mes = x.set({'MONTH': x.date().format('M')});
  return mes;
});
//print ('Radiacion',radiacion)
// Promedio mensual histórico de PAR
var months = ee.List.sequence(1,12,1); //lista con los meses
//print(months)
var PARpromedioMensual = months.map(function(j) {
  var imagen = radiacion.select('surface_net_solar_radiation')
      .filter(ee.Filter.calendarRange(j, ee.Number(j).add(1), 'MONTH')).first();
  return radiacion.select('surface_net_solar_radiation')
      .filter(ee.Filter.calendarRange(j, ee.Number(j).add(1), 'MONTH'))
      .reduce(ee.Reducer.mean())
      .rename('PAR').divide(1000000).multiply(0.60) //se divide para convertir de joule a Megajoule y se multiplica por 0.6 para usar solo radiación fotosinteticamente activa
      .clip(potreros).copyProperties(imagen, ['MONTH']);
});
var Historico_PAR = ee.ImageCollection.fromImages(PARpromedioMensual);
//print('Promedio mensual histórico de PAR', Historico_PAR);
//Map.addLayer(Historico_PAR .first())
//////////////////////////////////////////////////////////
//////// CORREGIR COLECCION DE IMAGENES SENTINEL//////////
/////////////////////////////////////////////////////////
/// Importar función SIAC para corregir atmosfericamente las S2_TOA (paso de TOA a BOA)
var siac = require('users/marcyinfeng/utils:SIAC'); //https://github.com/MarcYin/SIAC
//Función para corregir con modelo SIAC
var boa_siac = function(image){
  var bandas = image.select(['QA60']);
   var boa = siac.get_sur(image);
      boa = boa.multiply(10000).toInt();
return boa.addBands(bandas).set('system:time_start', image.get('system:time_start')).clip(potreros);
};
//Aplico la función siac para corregir las sentines TOA a BOA
var S2_BOA = S2_TOA.map(boa_siac);
// Funcion para enmascarar Nubes usando la banda de calidad (QA) de Sentinel-2 
function maskS2clouds(image) {
  var qa = image.select('QA60');
  // Los Bits 10 y 11 son Nubes y Cirrus respectivamente
  // Operadores a nivel de bits
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  // Los dos flags deben setearse en cero indicando condiciones sin nube
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask).divide(10000).set('system:time_start', image.get('system:time_start')).clip(potreros);
}
// Funcion para enmascarar Nubes usando la banda de calidad (QA) de Sentinel-2 
function maskS2clouds_SR(image) {
  var qa = image.select('QA60');
  // Los Bits 10 y 11 son Nubes y Cirrus respectivamente
  // Operadores a nivel de bits
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  // Los dos flags deben setearse en cero indicando condiciones sin nube
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
     mask = mask.multiply(image.select(['MSK_CLDPRB']).lt(1));
  return image.updateMask(mask).divide(10000).set('system:time_start', image.get('system:time_start'));
}
// aplica filtros y la función de enmascarar nubes
S2_BOA = S2_BOA.map(maskS2clouds);
//print('S2_BOA con máscara de nubes', S2_BOA);
S2 = S2.map(maskS2clouds_SR);
//print('S2 con máscara de nubes', S2);
//Merge entre ambas colecciones para obtener una sola serie temporal
S2 = S2_BOA.merge(S2);
S2 = S2.map(function(x){
  var mes = x.set({'MONTH': x.date().format('M')});
  return mes;
});
//print('S2 MONTH', S2)
//Función para enmascarar usando polígonos. El objetivo es enmascarar agua, parches de árboles y los casos de estancia.
//Crear una sola geometría con todos los polígonos
 var enmascarar = ee.FeatureCollection(enmascarar);
 enmascarar = enmascarar.merge(tajamares);
 //Para poder mostrar en el mapa los polígonos con borde naranja
 var empty = ee.Image().byte()	;
 var mascara = empty.paint({	
  featureCollection: enmascarar,	
color: 1,	
width: 2	
})	;
//Map.addLayer(mascara, {palette:['orange']}, 'enmascarar', false);
var maskInside = function(image, enmascarar) {
  var mask = ee.Image.constant(1).clip(geometry).mask().not();
  //mask = mask.updateMask(tajamares)
  return image.updateMask(mask);
};
var tools = require('users/fitoprincipe/geetools:tools'); //https://github.com/fitoprincipe/geetools-code-editor
//https://github.com/fitoprincipe/geetools-code-editor/wiki
S2 = S2.map(function(image){
  var masked = tools.geometry.maskInside(image, enmascarar);
  var fecha_imagen = ee.Image(image).date().format("YYYY M");
  return masked.set({'fecha': fecha_imagen});
});
//print ('Merge S2',S2)
// Ver mascara: 
//var S22 = S2.select('B4')
//Map.addLayer(S22, vis, 'enmascarar',false);
/////////////AGREGAR LA ZONA AGROECOLOGICA A LOS POTREROS ///////////
// Iterar lote por lote del campo
var potrero_con_zona = potreros.map(function(feat){
  //feat = ee.Feature(feat);
  var point = feat.geometry(); 
  // now map over the polygons
  var mappedPolys = zonas_agroecologicas.map(function(poly){
    var intersects = poly.intersects(point, ee.ErrorMargin(1));
    // check if the point intersected with the polygon
    var property = ee.String(ee.Algorithms.If(intersects, poly.get('REGION_N'), 'FALSE'));
    // set a property to each individual feature
    return feat.set('zona_agro',  ee.String(property));
                //.set('pointID', ee.String('id').cat(ee.String(feat.get('system:index'))));
  });
  // devuelve los poligonos que intersectan con una propiedad llamada FALSE'
  return ee.Feature(mappedPolys);
})
  // Flatten the collection of collections and filter out the 'FALSE' properties
  .flatten().filter(ee.Filter.neq('zona_agro', 'FALSE'));
//print('potrero_agregar_zona', potrero_con_zona);
//Map.addLayer(potrero_con_zona)
//////////////////////////////////////////
////JOIN ENTRE LA TABLA DE USOS DEL POTRERO Y EL POTRERO CON ZONAS
//// DE ESTA FORMA TENDREMOS LA ZONA AGRO EN LA TABLA DE USOS PARA LUEGO BUSCAR LA EUR QUE LE CORRESPONDE
///OBTENEMOS LA TABLA DE USOS PERO CON LA ZONA AGROECOLOGICA DE CADA LOTE
var ft3=ee.Filter.and(
  ee.Filter.equals({
    leftField: 'campo',
    rightField: 'CAMPO',
  }),
  ee.Filter.equals({
    leftField: 'lote',
    rightField: 'LOTE'
  })
);
var joined_zona = ee.Join.saveFirst('join').apply({
  primary: usos_potrero,
  secondary: potrero_con_zona,
  condition: ft3
});
//print('join zona',joined_zona);
var usos_zona = joined_zona.map(function(k){
  var zona_extract = ee.Feature(k.get('join')).get('zona_agro');
  return k.set('join',null).set('Area_agro',ee.String(zona_extract));
});
//print('usos_zona',usos_zona); 
/////////// DEFINIR EL JOIN PARA LA TABLA DE EUR Y ASIGNAR UNA PENDIENTE Y ORDENADA SEGÚN CORRESPONDA
var ft4 = ee.Filter.and(
  ee.Filter.equals({
    leftField: 'estacion',
    rightField: 'Estacion',
  }),
  ee.Filter.equals({
    leftField: 'uso',
    rightField: 'Uso'
  }),
  ee.Filter.equals({
    leftField: 'Area_agro',
    rightField: 'Zona'
  })
);
var joined_eur = ee.Join.saveFirst('EUR').apply({
  primary: usos_zona,
  secondary: EUR_tabla,
  condition: ft4
});
//print('joined_eur',joined_eur);
var usos_eur1 = joined_eur.map(function(e){
  var prop_pend= ee.Feature(e.get('EUR')).get('Pendiente_EUR');
  var prop_orde= ee.Feature(e.get('EUR')).get('Ordenada_EUR');
  return e.set('EUR',null).set('Pendiente_eur',prop_pend,'Ordenada_eur',prop_orde);
});
//print('usos_eur1',usos_eur1); 
//Map.addLayer(usos_eur1, {},'usos_eur1')
// crear colección de imágenes a partir de csv de usos de suelo. Se le agrega la geometría del shape potreros
var usos = (ee.FeatureCollection(usos_eur1)).toList(10000);
//print('usos', usos)
/////Función para agregar la geometría de los lotes a la lista de usos
var usos_geo = usos.map(function(k){
  var name = potreros.filterMetadata('IDLOTE','equals',ee.Feature(k).get('IDLOTE'));
  return ee.Feature(k).setGeometry(name.geometry());
});
//print('usos_geo',usos_geo);
//Convertir usos_geo a FeatureCollection
var usos_geo_ft = ee.FeatureCollection(usos_geo);
//print('usos_geo_ft',usos_geo_ft);
//Función para rasterizar los usos para cada lote.
var usos_geo_raster = ee.ImageCollection(usos_geo_ft.map(function(x){
   var mes =  (ee.FeatureCollection(x).reduceToImage({
                                properties:['mes'],
                                reducer: ee.Reducer.first()
                              })).rename('mes');
    var IDLOTE =  (ee.FeatureCollection(x).reduceToImage({
                                properties:['IDLOTE'],
                                reducer: ee.Reducer.first()
                              })).rename('IDLOTE'); 
    var pendiente_eur =  (ee.FeatureCollection(x).reduceToImage({
                                properties:['Pendiente_eur'],
                                reducer: ee.Reducer.first()
                              })).rename('Pendiente_eur'); 
    var ordenada_eur =  (ee.FeatureCollection(x).reduceToImage({
                                properties:['Ordenada_eur'],
                                reducer: ee.Reducer.first()
                              })).rename('Ordenada_eur'); 
    var fecha =  (ee.Feature(x).get('fecha'))      
                              ;                            
                              return ee.Image(IDLOTE).addBands([ordenada_eur,pendiente_eur]) 
                              .set({'mes':ee.Feature(x).get('mes'),'anio':ee.Feature(x).get('anio'), 'IDLOTE':ee.Feature(x).get('IDLOTE'), 'fecha': fecha });
}) );
//imprimir en la consola la colección y agregar al mapa
//print('usos_geo_raster', usos_geo_raster);
//Map.addLayer(usos_geo_raster,{}, 'usos_geo_raster')
//Función para iterar la lista de fechas únicas y armar un mosaico de usos por lote para la misma fecha
var mosaico = (function(lista_fechas_unicas, newlist) {
 newlist = ee.List(newlist);
  // Filtro por fecha
  var filtered = usos_geo_raster.filterMetadata('fecha','equals',lista_fechas_unicas);
   // Hago el mosaico
  var image = ee.Image(filtered.mosaic()).set({'fecha':lista_fechas_unicas});
  // Agrega el mosaico a una lista sólo si está esa fecha en la colección de imágenes
  return ee.List(ee.Algorithms.If(filtered.size(), newlist.add(image), newlist));
});
//Crear lista de fechas únicas a partir de la colección de imágenes s2_cortadas
 var lista_fechas = S2.toList(S2.size());
// print('lista de fechas de colección Sentinel',lista_fechas)
  var lista_fechas_unicas = lista_fechas.map(function(im){
    return ee.Image(im).date().format("YYYY M");
  }).distinct();
//imprimir en la consola la lista
//print('Lista de fechas únicas', lista_fechas_unicas);
// Iterar la image collection por la lista de fechas para hacer un mosaico por fecha
var eur_por_lote = ee.ImageCollection(ee.List(lista_fechas_unicas.iterate(mosaico, ee.List([]))));
//print('EUR por lote', eur_por_lote);
//Map.addLayer(eur_por_lote,{},'eur por lote');
/////////AGREGAR LAS BANDAS ORDENADA Y PENDIENTE EUR A LA COLECCION DE IMAGENES 
var add_eur = S2.map(function(x){
  var fecha_coincidente = ee.Image(eur_por_lote.filterMetadata('fecha','equals',ee.Feature(x).get('fecha')).first());
  return x.addBands(fecha_coincidente);
});
// VER EUR
//print('add_eur',add_eur);
//var add_eur_sel = add_eur.select("B4")
//Map.addLayer(add_eur_sel,vis,"Add",false)
////////////////////////////////////////////////////////////	
// CALCULO PPNA	
////////////////////////////////////////////////////////////	
//se define la función addEVI para calcular EVI y aplicar la máscara de calidad	
var addEVI = function(image) {	
var evi = image.expression('float (2.5 * ((NIR - RED) / (NIR + 6 * RED - 7.5 * BLUE + 1)))', {
      'NIR' : image.select('B8'),
      'RED' : image.select('B4'),
      'BLUE': image.select('B2')}).rename('EVI');
return image.addBands(evi).clip(potreros); //agrega la banda m que tiene el NDVI
}	;
//aplico la función addEVI en la variable EVI
var EVI = add_eur.map(addEVI).select(['EVI','Ordenada_eur','Pendiente_eur']); //selecciona únicamente la banda EVI
//print('Agregar EVI',EVI);
//Función para agregar la fecha a la colección	
var addDate = function(image){	
  var doy = image.date().getRelative('day', 'year');	
var doyBand = ee.Image.constant(doy).uint16().rename('doy');	
  return image.addBands(doyBand);	
}	;
//Aplico la función para agregar fecha
var EVI_DOY = EVI.map(addDate);	
//print('Agregar Day Of Year (DOY)',EVI_DOY);	
/////Función para cálcular PAR	
var ft_PAR = ee.Filter.equals({
    leftField: 'MONTH',
    rightField: 'MONTH'
    });
var joined_PAR= ee.Join.saveFirst('PAR').apply({
  primary: EVI_DOY,
  secondary: Historico_PAR,
  condition: ft_PAR
});
var addPAR = ee.ImageCollection(joined_PAR.map(function(x){
   var PAR =  x.get('PAR')
  return ee.Image(x).addBands(PAR).clip(potreros).set('PAR',null)
}));
//print('addPAR', addPAR)
//Función para cálcular fPAR	
var addfPAR = function(image){	
      //Gitelson 2019:
      var f = image.expression('min(max(((-1.06*(EVI**2))+2.28*EVI-0.26),0.20),0.95)', {	
             'EVI': image.select('EVI')
             }).rename('fPAR')	;
       return image.addBands(f)	;
}	;
//Aplico función fPAR
var fpar = addPAR.map(addfPAR)	;
//print('Agregar fPAR',fpar)	;
//Función para calcular PPNA
var addPPNA = function(image){	
var f = image.expression('max((((PAR*fPAR*pendiente_eur)+ordenada_eur)*10),0)', {	
      'fPAR': image.select('fPAR'),	
      'PAR': image.select('PAR'),
      'ordenada_eur': image.select('Ordenada_eur'),
      'pendiente_eur': image.select('Pendiente_eur')
  }).rename('PPNA');	
  return image.addBands(f).clip(potreros);	
};	
//Aplico función addPPNA
var PPNA = fpar.map(addPPNA)	;
print('Agregar PPNA',PPNA);	
//var PPNA2 = PPNA.select("PPNA").filterDate("2022-01-09","2022-01-11").filterBounds(potreros)
//Map.addLayer(PPNA2, null, "PPNA",false)
////////////////////////////////////////////////////////////	
// MAPA y GRAFICO	
////////////////////////////////////////////////////////////	
var vis = {bands: 'EVI', min: 0, max: 1, palette: [	
'FFFFFF', 'CE7E45', 'FCD163', '66A000', '207401',	
'056201', '004C00', '023B01', '012E01', '011301'	
]}	;
Map.addLayer(PPNA.first(), vis, 'EVI',true);	//cargo en el mapa la banda EVI de NDVIq
Map.centerObject(potreros);	//centro el mapa en los potreros
Map.addLayer(potreros.style({color: 'FFD700', fillColor:'FF000000'}), null, 'Potreros')
// Create a panel to hold our widgets.	
var panel = ui.Panel();	
panel.style().set('width', '600px');	
// Create an intro panel with labels.	
var intro = ui.Panel([	
  ui.Label({	
value: 'Predio de Alejandro-Rodriguez: Tasa de crecimiento del forraje (Kg/ha*dia)',
style: {fontSize: '20px', fontWeight: 'bold'}	
  }),	
])	;
panel.add(intro);	
var intro = ui.Panel([	
  ui.Label({	
value: 'Estimada con información satelital de imagenes Sentinel',	
style: {fontSize: '15px', fontWeight: 'bold'}	
  }),	
])	;
panel.add(intro);
var tempTimeSeries = ui.Chart.image.seriesByRegion({	
                            imageCollection:PPNA,
                            regions:potreros,
                            reducer:ee.Reducer.mean(),
                            band:'PPNA',
                            scale:30,
                            xProperty:'system:time_start',
                            seriesProperty:'LOTE'
                            })
                    .setOptions({	
                            title: 'PPNA',	
                            vAxis: {title: 'PPNA (kg/ha/d)'},	
                            lineWidth: 0.5,	
                            pointSize: 2,	
                            series: {	
                                  1: {color: 'FF0000'}, // pix1	
                                  2: {color: '00FF00'}, // pix1	
                                  3: {color: '0000FF'}, // pix4	
                                  }})	;
//print(tempTimeSeries)	
panel.widgets().set(2, tempTimeSeries);
// Create panels to hold lon/lat values.	
var lon = ui.Label();	
var lat = ui.Label();	
/*
//panel.add(ui.Panel([lon, lat], ui.Panel.Layout.flow('horizontal')))	
Map.onClick(function(coords) {	
  // Update the lon/lat panel with values from the click event.	
lon.setValue('lon: ' + coords.lon.toFixed(2)),	
lat.setValue('lat: ' + coords.lat.toFixed(2))	
  // Add a red dot for the point clicked on.	
  var point = ee.Geometry.Point(coords.lon, coords.lat)	
  // Create an NDVI chart.	
var ndviChart = ui.Chart.image.series(PPNA.select(['PPNA']), point, ee.Reducer.mean(), 30)	
  ndviChart.setOptions({	
title: 'PPNA del punto ' + coords.lon.toFixed(2) + ' ' +  coords.lat.toFixed(2),	
    vAxis: {title: 'PPNA (kg/ha/d)'},	
hAxis: {title: 'date', format: 'MM-yy', gridlines: {count: 7}},	
  })	
panel.widgets().set(3, ndviChart)	
})	
Map.style().set('cursor', 'crosshair')	
*/
// Add the panel to the ui.root.	
ui.root.insert(0, panel);	
Map.setOptions('SATELLITE');
var Metricas = PPNA.map(function(fecha){
  var indiceFecha = fecha.reduceRegions({
    collection: potreros.select(['LOTE']),
    reducer: ee.Reducer.mean()
    });
  return indiceFecha.map(function(i){
    return i.set({
      // 'system:time_start': fecha.get('system:time_start'),
      'AnioImg': fecha.date().get('year'),
      'MesImg' : fecha.date().get('month'),
      'DiaImg': fecha.date().get('day')
      });
    });
}).flatten();
/// Exportar métricas a CSV
/*
Export.table.toDrive({
  collection: Metricas,
  description: 'Metricas' + 'PPNA' +'-porLote',
  folder: 'PPNA_TFF',
  fileFormat: 'CSV'
})
*/